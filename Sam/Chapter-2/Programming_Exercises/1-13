/* Author: Samantha Alcantara
Date: July 10, 2020


2.1
(Convert Celsius to Fahrenheit) Write a program that reads a Celsius
degree in a double value from the console, then converts it to 
Fahrenheit and displays the result. The formula for the conversion
is as follows: fahrenheit = (9 / 5) * celsius + 32



import java.util.Scanner;
class CelsiusToFahrenheit {
  public static void main(String[] args) {
    Scanner input = new Scanner(System.in);
     System.out.print("Enter a degree in Celsius: ");
    double celsius = input.nextDouble();
    double fahrenheit = (9.0 / 5) * celsius + 32;
    System.out.println(celsius + " celsius is " + fahrenheit + " in Fahrenheit");
  }
}

2.2
(Compute the volume of a cylinder) Write a program that reads in the radius
and length of a cylinder and computes the area and volume using the following
formulas:
area = radius * radius * Ï€
volume = area * length



import java.util.Scanner;

class VolumeOfCylinder {
  public static void main(String[] args) {
  Scanner input = new Scanner(System.in);
  System.out.println("Enter the radiius and length of a cylinder: ");
  double radius = input.nextDouble();
  double length = input.nextDouble();
  
  double area = radius * radius * 3.14159;
  double volume = area * length;
  System.out.println("The area of the cylinder is " + area + " and the volume of the cylinder is " + volume);
  }
}



2.3
(Convert feet into meters) Write a program that reads a number in feet,
converts it to meters, and displays the result. One foot is 0.305 meter.


import java.util.Scanner;

class FeetToMeters {
  public static void main(String[] args) {
  Scanner input = new Scanner(System.in);
  System.out.print("Enter a value for feet: ");
  
  double feet = input.nextDouble();
  double meters = feet * 0.305;
  System.out.println(feet + " feet is " + meters + " meters");
  }
  

  2.4
(Convert pounds into kilograms) Write a program that converts pounds into
kilograms. The program prompts the user to enter a number in pounds, converts
it to kilograms, and displays the result. One pound is 0.454 kilograms. 


import java.util.Scanner;

class PoundsToKilograms {
  public static void main(String[] args) {
    Scanner input = new Scanner(System.in);
    System.out.println("Enter a number in pounds: ");
    double pounds = input.nextDouble();
    double kilograms = pounds * 0.454;
    System.out.println(pounds + " pounds is " + kilograms + " kilograms");
  }
}



2.5
(Financial application: calculate tips) Write a program that reads the
subtotal and the gratuity rate, then computer the gratuity and total.
For example, if the user enters 10 for subtotal and 15% for gratuity rate,
the program displays $1.5 as gratuity and $11.5 as total.

import java.util.Scanner;

class CalculateTips {
  public static void main(String[] args) {
    Scanner input = new Scanner(System.in);
    
    System.out.print("Enter the subtotal and a gratuity rate: ");
    double subtotal = input.nextDouble();
    double gratuityRate = input.nextDouble();

    double gratuity = subtotal * (gratuityRate/100);
    double total = subtotal + gratuity;
    System.out.println("The gratuity is $" + gratuity + " and the total is $" + total);
  }
}



2.6
(Sum the digits in an integer) Write a program that reads an integer between
0 and 1000 and add all the digits in the integer. For example, if an integer is
932, the sum of all its digits is 14.


import java.util.Scanner;

class SumOfDigits {
  public static void main(String[] args) {
    Scanner input = new Scanner(System.in);

    System.out.print("Enter a number between 0 and 1000: ");
    int number = input.nextInt();

    int number1 = number % 10;
    number /= 10;
    int number2 = number % 10;
    number /= 10;
    int number3 = number % 10;
    number /= 10;
    int sum = number1 + number2 + number3;

    System.out.println("The sum of the digitis is " + sum);
  }
}


2.7
(Find the number of year) Write a program that prompts the user to enter the 
minutes (e.g., 1 billion), and displays the  number of years and days for the
minutes. For simplicity, assume a year had 365 days.


import java.util.Scanner;

class MinutesYearsDays {
  public static void main(String[] args) {
    Scanner input = new Scanner(System.in);
    
    System.out.print("Enter the number of minutes: ");
    int minutes = inpurt.nextInt();

    int year = minutes / 525600;
    int day = minutes / 1440;
    int


2.8
(Current time) Listing 2.7, ShowCurrentTime.java, gives a program that displays
the current time in GMT. Revise the program so that it prompts the user to
enter the time zone offset to GMT and displays the time in the specified time
zone.


import java.util.Scanner;

class OffsetZone {
  public static void main(String[] args) {
    Scanner input = new Scanner(System.in);

    System.out.print("Enter the time zone offset to GMT: ");
    int offset = input.nextInt();

    long totalMilliseconds = System.currentTimeMillis();

    long totalSeconds = totalMilliseconds / 1000;

    long currentSecond = totalSeconds % 60;

    long totalMinutes = totalSeconds / 60;

    long currentMinute = totalMinutes % 60;

    long totalHours = totalMinutes / 60;

    long currentHour = totalHours % 24;
    currentHour = currentHour + offset;

    System.out.println("The current time is " + currentHour +  ":" + currentMinute + ":" + currentSecond);
  }
  
  2.9
  (Physics: acceleration) Average acceleration is defined as the change of velocity
divided by the time taken to make the change, as shown in the following formula:
                             
            v1 - v0
        a =    /
                t                              
                              
Write a program that prompts the user to enter the starting velocity v0 in meters/ second,
the ending velocity v1, in meters/second, and the time span t in seconds, and displays
the average acceleration:

import java.util.Scanner;

class AverageAcceleration {
  public static void main(String[] args) {
    Scanner input = new Scanner(System.in);

    System.out.print("Enter v0, v1, and t: ");
    double v0 = input.nextDouble();
    double v1 = input.nextDouble();
    double t = input.nextDouble();

    double acceleration = (v1 - v0) / t;

    System.out.println("The average acceleration is " + acceleration);
  }
  
  
  
2.10
(Science: calculating energy) Write a program that calculates the energy
needed to heat water from an initial temperature to a final temperature.
Your program should prompt the user to enter the amount of water in
kilograms and the initial and final temperatures of the water. The formula
to compute the energy is


Q = M * (finalTemperature - initialTemperature) * 4184
where M is the weight of the water in kilograms, temperatures are in degrees
Celsius, and energy is Q measure in joules.


import java.util.Scanner;

class CalculatingEnergy {
  public static void main(String[] args) {
    Scanner input = new Scanner(System.in);

    System.out.print("Enter the amount of water in kilograms: ");
    double kilograms = input.nextDouble();

    System.out.print("Enter the initial temperature: ");
    double initialTemperature = input.nextDouble();

    System.out.print("Enter the final temperature: ");
    double finalTemperature = input.nextDouble();

    double energy = kilograms * (finalTemperature - initialTemperature) * 4184;

    System.out.println("The energy needed is " + energy);
  }
}


2.11
(Population projection) Rewrite Programming Exercise 1.11 to prompt the user to 
enter the number of years and displays the population after the number of years.
Use the hint in Programming Exercise 1.11 for this program. The population should
be cast into an integer.

import java.util.Scanner;

class PopulationProjection {
  public static void main(String[] args) {
    Scanner input = new Scanner(System.in);
 
    System.out.print("Enter the number of years: ");
    int years = input.nextInt();

    int population = 312032486 + (((31536000 / 7) - (31536000 / 13) + (31536000 / 45)) * years);

    System.out.println("The population in " + years + " is " + population);
  }
}


2.12
(Physics: finding runway length) Given an airplanes acceleration a and take-off speed v, you can
compute the minimum runway length needed for an airplane to take off using the following formula:
 
             v^2
 length =     /                                     
              2a                    
Write a program that prompts the user to enter v in meters/second (m/s) and the acceleration a
in meters/second squared (m/s^2), and displays the minimum runway length.

import java.util.Scanner;

class AirplaneMode {
  public static void main(String[] args) {
  Scanner input = new Scanner(System.in);

  System.out.print("Enter speed and acceleration: ");
  double speed = input.nextDouble();
  double acceleration = input.nextDouble();

  double length = (speed * speed) / (2 * acceleration);

  System.out.println("The minimum runway length for this airplane is " + length);
 
  }
  
  
  2.13
(Financial application: compound value) Suppose you save $100 each month into
a savings account with the annual interest rate 5%. Thus, the monthly interest
rate is 0.05/12 = 0.00417. After the first month, the value in the account beomces
100 * (1 + 0.00417) = 100.417
After the second month, the value in the account becomes
(100 + 100.417) * (1 + 0.00417) = 201.252
After the third month, the value in the account becomes
(100 + 201.252) * (1 + 0.00417) = 302.507
and so on. Write a program that prompts the user to enter a monthly saving
amount and displays
the account value after the sixth month. 


import java.util.Scanner;

class Rate_5 {
  public static void main(String[] args) {
    Scanner input = new Scanner(System.in);
    final double MONTHLY_INTEREST_RATE = 0.00417;
   
    System.out.print("Enter the monthly saving amount: ");
    double savingAmount = input.nextDouble();

    double total = 100 * (1 + MONTHLY_INTEREST_RATE);
    total = (100 + total) * (1 + MONTHLY_INTEREST_RATE);
    total = (100 + total) * (1 + MONTHLY_INTEREST_RATE);
    total = (100 + total) * (1 + MONTHLY_INTEREST_RATE);
    total = (100 + total) * (1 + MONTHLY_INTEREST_RATE);
    total = (100 + total) * (1 + MONTHLY_INTEREST_RATE);

    System.out.println("After the sixth month, the account value is " + total);

  }
  
  */ 
